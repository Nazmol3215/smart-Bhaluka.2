import React, { useState, useEffect } from "react";
import "bootstrap/dist/css/bootstrap.min.css"; // Bootstrap ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá

// ‡¶°‡¶ï‡ßç‡¶ü‡¶∞‡ßá‡¶∞ ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶ï‡¶Æ‡ßç‡¶™‡ßã‡¶®‡ßá‡¶®‡ßç‡¶ü
const DoctorProfile = ({ doctor }) => {
  const { image, name, phone, expertise, address } = doctor;

  // ‡¶Æ‡ßã‡¶¨‡¶æ‡¶á‡¶≤ ‡¶®‡¶æ‡¶Æ‡ßç‡¶¨‡¶æ‡¶∞‡ßá ‡¶ï‡ßç‡¶≤‡¶ø‡¶ï ‡¶ï‡¶∞‡¶≤‡ßá ‡¶°‡¶æ‡ßü‡¶æ‡¶≤ ‡¶Ö‡¶™‡¶∂‡¶®‡ßá ‡¶ö‡¶≤‡ßá ‡¶Ø‡¶æ‡¶ì‡ßü‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
  const handleCall = (phoneNumber) => {
    window.location.href = `tel:${phoneNumber}`;
  };

  return (
    <div
      className="card mb-4"
      style={{
        backgroundColor: "#f0f8ff",
        borderRadius: "10px",
        padding: "20px",
        boxShadow: "0 4px 8px rgba(0, 0, 0, 0.1)",
      }}
    >
      <div className="card-body text-center">
        <img
          src={image}
          alt={name}
          className="rounded-circle mb-3"
          style={{ width: "150px", height: "150px", objectFit: "cover" }}
        />
        <h5 className="card-title">{name}</h5>
        <p className="card-text">
          <span
            style={{ cursor: "pointer", color: "#0066cc" }}
            onClick={() => handleCall(phone)}
          >
            üìû {phone}
          </span>
        </p>
        <p className="card-text">
          <strong>‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û‡¶§‡¶æ:</strong> {expertise}
        </p>
        <hr />
        <p className="card-text">
          <strong>‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ:</strong> {address}
        </p>
        <hr />
      </div>
    </div>
  );
};

// ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶´‡¶ø‡¶≤‡ßç‡¶ü‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶ï‡¶Æ‡ßç‡¶™‡ßã‡¶®‡ßá‡¶®‡ßç‡¶ü
const DoctorProfiles = ({ doctors }) => {
  const [filteredDoctors, setFilteredDoctors] = useState([]);
  const [searchTerm, setSearchTerm] = useState("");
  const [expertiseFilter, setExpertiseFilter] = useState("");
  const [addressFilter, setAddressFilter] = useState("");

  // ‡¶è‡¶≤‡ßã‡¶Æ‡ßá‡¶≤‡ßã ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶≤‡ßã‡¶° ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
  useEffect(() => {
    // ‡¶è‡¶≤‡ßã‡¶Æ‡ßá‡¶≤‡ßã‡¶≠‡¶æ‡¶¨‡ßá ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞‡¶¶‡ßá‡¶∞ ‡¶∏‡¶æ‡¶ú‡¶æ‡¶®‡ßã
    const shuffledDoctors = [...doctors].sort(() => 0.5 - Math.random());
    setFilteredDoctors(shuffledDoctors);
  }, [doctors]);

  // ‡¶´‡¶ø‡¶≤‡ßç‡¶ü‡¶æ‡¶∞ ‡¶è‡¶¨‡¶Ç ‡¶∏‡¶æ‡¶∞‡ßç‡¶ö ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®
  useEffect(() => {
    let filtered = doctors;

    if (searchTerm) {
      filtered = filtered.filter((doctor) =>
        doctor.name.toLowerCase().includes(searchTerm.toLowerCase())
      );
    }
    if (expertiseFilter) {
      filtered = filtered.filter((doctor) =>
        doctor.expertise.toLowerCase().includes(expertiseFilter.toLowerCase())
      );
    }
    if (addressFilter) {
      filtered = filtered.filter((doctor) =>
        doctor.address.toLowerCase().includes(addressFilter.toLowerCase())
      );
    }

    setFilteredDoctors(filtered);
  }, [searchTerm, expertiseFilter, addressFilter, doctors]);

  return (
    <div className="container mt-5">
      <div className="row mb-4">
        <div className="col-md-4">
          <input
            type="text"
            className="form-control"
            placeholder="‡¶®‡¶æ‡¶Æ ‡¶¶‡¶ø‡ßü‡ßá ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßÅ‡¶®"
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
          />
        </div>
        <div className="col-md-4">
          <select
            className="form-control"
            value={expertiseFilter}
            onChange={(e) => setExpertiseFilter(e.target.value)}
          >
            <option value="">‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û‡¶§‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
            <option value="‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û">‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û</option>
            <option value="‡¶∏‡¶æ‡¶∞‡ßç‡¶ú‡¶®">‡¶∏‡¶æ‡¶∞‡ßç‡¶ú‡¶®</option>
            <option value="‡¶π‡ßÉ‡¶¶‡¶∞‡ßã‡¶ó ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û">‡¶π‡ßÉ‡¶¶‡¶∞‡ßã‡¶ó ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û</option>
          </select>
        </div>
        <div className="col-md-4">
          <select
            className="form-control"
            value={addressFilter}
            onChange={(e) => setAddressFilter(e.target.value)}
          >
            <option value="">‡¶†‡¶ø‡¶ï‡¶æ‡¶®‡¶æ ‡¶®‡¶ø‡¶∞‡ßç‡¶¨‡¶æ‡¶ö‡¶® ‡¶ï‡¶∞‡ßÅ‡¶®</option>
            <option value="‡¶¢‡¶æ‡¶ï‡¶æ">‡¶¢‡¶æ‡¶ï‡¶æ</option>
            <option value="‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ">‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ</option>
            <option value="‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ">‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ</option>
          </select>
        </div>
      </div>

      <div className="row">
        {filteredDoctors.length === 0 ? (
          <p className="text-center" style={{ fontSize: "1.2rem" }}>
            ‡¶ï‡ßã‡¶®‡ßã ‡¶™‡ßç‡¶∞‡ßã‡¶´‡¶æ‡¶á‡¶≤ ‡¶™‡¶æ‡¶ì‡ßü‡¶æ ‡¶Ø‡¶æ‡ßü‡¶®‡¶ø
          </p>
        ) : (
          filteredDoctors.map((doctor, index) => (
            <div key={index} className="col-md-4">
              <DoctorProfile doctor={doctor} />
            </div>
          ))
        )}
      </div>
    </div>
  );
};

// ‡¶Æ‡ßÇ‡¶≤ ‡¶ï‡¶Æ‡ßç‡¶™‡ßã‡¶®‡ßá‡¶®‡ßç‡¶ü
const Doctors_Valukka = () => {
  // ‡¶°‡¶æ‡¶ï‡ßç‡¶§‡¶æ‡¶∞‡¶¶‡ßá‡¶∞ ‡¶§‡¶•‡ßç‡¶Ø
  const doctors = [
    {
      image: "https://via.placeholder.com/150",
      name: "‡¶°. ‡¶ú‡¶® ‡¶°‡ßã",
      phone: "01812345678",
      expertise: "‡¶ö‡¶ø‡¶ï‡¶ø‡ßé‡¶∏‡¶æ ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û",
      address: "‡¶¢‡¶æ‡¶ï‡¶æ, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂",
    },
    {
      image: "https://via.placeholder.com/150",
      name: "‡¶°. ‡¶Æ‡¶ø‡¶®‡¶æ ‡¶ñ‡¶æ‡¶®",
      phone: "01723456789",
      expertise: "‡¶∏‡¶æ‡¶∞‡ßç‡¶ú‡¶®",
      address: "‡¶ö‡¶ü‡ßç‡¶ü‡¶ó‡ßç‡¶∞‡¶æ‡¶Æ, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂",
    },
    {
      image: "https://via.placeholder.com/150",
      name: "‡¶°. ‡¶ï‡¶æ‡¶Æ‡¶∞‡ßÅ‡¶≤ ‡¶π‡¶æ‡¶∏‡¶æ‡¶®",
      phone: "01634567890",
      expertise: "‡¶π‡ßÉ‡¶¶‡¶∞‡ßã‡¶ó ‡¶¨‡¶ø‡¶∂‡ßá‡¶∑‡¶ú‡ßç‡¶û",
      address: "‡¶∞‡¶æ‡¶ú‡¶∂‡¶æ‡¶π‡ßÄ, ‡¶¨‡¶æ‡¶Ç‡¶≤‡¶æ‡¶¶‡ßá‡¶∂",
    },
  ];

  return <DoctorProfiles doctors={doctors} />;
};

export default Doctors_Valukka;
